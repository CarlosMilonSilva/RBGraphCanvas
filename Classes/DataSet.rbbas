#tag ClassProtected Class DataSet	#tag Method, Flags = &h0		Sub addValue(xvalue as double, yvalue as double)		  xvalues.append xvalue		  yvalues.append yvalue		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(contents as dictionary)		  dim xv,yv as dictionary		  dim i as integer		  		  lineCol=contents.value("lineCol")		  name=contents.value("name")		  		  xv=contents.value("xvalues")		  yv=contents.value("yvalues")		  		  redim xvalues(-1)		  redim yvalues(-1)		  for i=0 to xv.count-1		    xvalues.append xv.value(str(i))		    yvalues.append yv.value(str(i))		  next		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(name as string, col as color)		  self.name=name		  lineCol=col		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function count() As integer		  return ubound(xvalues)+1		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function dictValue() As dictionary		  dim d,xv,yv as dictionary		  dim i as integer		  		  d=new dictionary		  		  d.value("lineCol")=lineCol		  d.value("name")=name		  		  xv=new dictionary		  yv=new dictionary		  		  for i=0 to ubound(xvalues)		    xv.value(str(i))=xvalue(i)		    yv.value(str(i))=yvalue(i)		  next		  		  d.value("xvalues")=xv		  d.value("yvalues")=yv		  		  return d		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub dupArray(src() as double, byref dst() as double)		  dim i as integer		  for i=0 to ubound(src)		    dst.append(src(i))		  next		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function getColor() As color		  return lineCol		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function maxx() As double		  dim copy() as double		  		  dupArray(xvalues,copy)		  		  'copy=xvalues		  		  copy.sort		  return copy(ubound(copy))		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function maxy() As double		  dim copy() as double		  		  dupArray(yvalues,copy)		  'copy=yvalues		  		  copy.sort		  return copy(ubound(copy))		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function minx() As double		  dim copy() as double		  		  dupArray(xvalues,copy)		  'copy=xvalues		  		  copy.sort		  return copy(0)		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function miny() As double		  dim copy() as double		  		  dupArray(yvalues,copy)		  'copy=yvalues		  		  copy.sort		  return copy(0)		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function name() As string		  return _name		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub name(assigns value as string)		  _name=value		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub removeRow(index as integer)		  xvalues.remove index		  yvalues.remove index		exception		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub setColor(col as color)		  lineCol=col		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function xvalue(index as integer) As double		  return xvalues(index)		  		exception		  return 0		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub xvalue(index as integer, assigns value as double)		  xvalues(index)=value		exception		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function yvalue(index as integer) As double		  return yvalues(index)		  		exception		  return 0		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub yvalue(index as integer, assigns value as double)		  yvalues(index)=value		exception		End Sub	#tag EndMethod	#tag Note, Name =  Info				DataSet		By Alex Restrepo		send comments, suggestions, fixes to alexrestrepo@mac.com				This class holds the x,y values for a graph				Use in whatever way you like... at your own risk :P		let me know if you find it useful.		If you decide to use it in your projects, please give me credit in your about window, thanks.					#tag EndNote	#tag Property, Flags = &h1		Protected lineCol As color	#tag EndProperty	#tag Property, Flags = &h1		Protected xvalues() As double	#tag EndProperty	#tag Property, Flags = &h1		Protected yvalues() As double	#tag EndProperty	#tag Property, Flags = &h1		Protected _name As string	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass